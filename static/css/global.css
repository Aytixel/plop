@import "palette.css";
@import "font.css";

* {
    position: relative;
    z-index: 0;

    margin: 0;

    box-sizing: border-box;

    padding: 0;

    color: inherit;

    font-size: inherit;

    text-wrap: pretty;
    text-rendering: optimizeLegibility;
}

body {
    color: rgb(var(--color-dark));

    background-color: rgb(var(--color-light));
}

@media (max-width: 550px) or (max-height: 550px) {
    body {
        font-size: .8em;
    }
}

[hidden] {
    display: none !important;
}

footer {
    height: 5em;
}

a {
    display: inline-block;

    text-decoration: none;

    color: color-mix(in srgb, rgb(var(--color-primary)) 75%, rgb(var(--color-dark)));
}

img {
    color: #0000;
}

hr {
    margin: 2em 1em;

    border: none;
    border-top: solid .1em rgb(var(--color-dark) / .1);
}

p.banner {
    margin: 1em;

    padding: .5em 1em;
}

p.banner.important {
    border: solid .1em rgb(var(--color-dark) / 1);
    border-radius: .5em;

    color: rgb(var(--color-light));

    background-color: rgb(var(--color-dark) / .95);
}

/*
    Input
*/
.button,
button,
input,
textarea {
    --bg-color: rgb(var(--color-dark) / .05);
    --hover-bg-color: rgb(var(--color-dark) / .1);
    --padding-block: .5em;
    --padding-inline: 1em;
    --inner-size: 1.5em;
    --outer-size: calc(var(--inner-size) + var(--padding-block) * 2);
    --icon-margin: .75em;

    display: inline-block;

    padding: var(--padding-block) var(--padding-inline);

    min-width: var(--outer-size);
    min-height: var(--outer-size);
    height: var(--outer-size);

    border: solid .1em var(--hover-bg-color);
    border-radius: .5em;

    appearance: none;
    outline: none;

    line-height: var(--inner-size);

    color: rgb(var(--color-dark));

    text-align: left;

    vertical-align: middle;

    background-color: var(--bg-color);

    cursor: pointer;

    transition: .3s background-color, .3s color, .2s .2s border-color;
}

textarea {
    height: auto;
}

:where(.button, button, input, textarea).rounded {
    --padding-inline: 1.5em;

    border-radius: calc(var(--outer-size) / 2);
}

:where(.button, button, input, textarea).inverted {
    --bg-color: #0000;
    --hover-bg-color: rgb(var(--color-dark) / .1);

    border-color: var(--bg-color);
}

:where(.button, button, input, textarea).important {
    --bg-color: rgb(var(--color-dark) / .95);
    --hover-bg-color: rgb(var(--color-dark) / 1);

    color: rgb(var(--color-light));
}

:where(.button, button, input, textarea).active {
    --bg-color: rgb(var(--color-primary) / .1);
    --hover-bg-color: rgb(var(--color-primary) / .2);
}

:where(.button, button, input, textarea):hover {
    border-color: var(--hover-bg-color);

    background-color: var(--hover-bg-color);

    transition-delay: 0s;
}

:where(.button, button, input, textarea):focus-visible {
    border-color: var(--hover-bg-color);

    background-color: var(--hover-bg-color);

    transition-delay: 0s;
}

:is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]):is(.icon, .collapse) {
    padding: var(--padding-block);
}

:is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]):has(:is(svg, img)) {
    padding-left: var(--padding-block) !important;
}

:is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]) :is(svg, img) {
    display: block;

    float: left;

    height: var(--inner-size);
    width: var(--inner-size);

    margin-right: var(--icon-margin);

    padding: .1em;
}

:is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]):is(.icon, .collapse) :is(svg, img) {
    margin: 0;
}

:is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]).collapse span {
    display: none;
}

@media (min-width: 600px) and (min-height: 400px) {
    :is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]).collapse {
        padding: var(--padding-block) var(--padding-inline);
    }

    :is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]).collapse :is(svg, img) {
        margin-right: var(--icon-margin);
    }

    :is(.button, button, input[type="submit"], input[type="reset"], input[type="button"]).collapse span {
        display: inline;
    }
}

input[type="checkbox"] {
    margin: .5em;

    padding: 0;

    --padding-block: 0em;
    --inner-size: 1.5em;
}

input[type="checkbox"]:checked::before {
    display: block;

    position: absolute;
    top: 50%;
    left: 50%;

    width: 1em;
    height: .5em;

    content: "";

    border: solid .2em rgb(var(--color-dark));
    border-top: none;
    border-right: none;

    transform: translate(-50%, -50%) rotate(-45deg) scale(.75);
}

/*

    Label

*/
label {
    user-select: none;

    cursor: pointer;
}

/*

    Dialog

*/
dialog {
    position: fixed;
    top: 50%;
    left: 50%;

    padding: 1em;

    max-width: calc(100% - 2em);
    max-height: calc(100% - 2em);

    border: solid .1em rgb(var(--color-dark) / .1);
    border-radius: .5em;

    color: rgb(var(--color-dark));

    background-color: rgb(var(--color-light));

    translate: -50% -50%;
}

dialog::backdrop {
    background-color: rgb(var(--color-light) / .5);

    backdrop-filter: blur(10px);
}

dialog h2 {
    display: grid;
    align-items: center;
    grid-template-columns: 1fr auto;

    margin-bottom: 1em;
}